CURSO DE WEB API C# | ASP.NET CORE 7.0
============================================================

1. O QUE É UMA API?
------------------------------------------------------------
API (Interface de Programação de Aplicações) é um conjunto de métodos 
e padrões que permite a comunicação entre sistemas. 
Serve para simplificar o acesso a sistemas complexos ou legados, 
abstraindo detalhes técnicos.

2. COMO FUNCIONA UMA WEB API?
------------------------------------------------------------
- Dispositivos (celulares, navegadores, etc.) acessam a API via HTTP.
- A API consulta o banco de dados e devolve os dados em JSON.
- O JSON é facilmente interpretado pelo front-end.

3. O QUE É HTTP?
------------------------------------------------------------
HTTP (HyperText Transfer Protocol) é o protocolo de comunicação entre 
cliente e servidor. Ex: quando acessamos um site, o navegador faz uma 
requisição HTTP e o servidor retorna uma página HTML.

4. O QUE É JSON?
------------------------------------------------------------
JSON (JavaScript Object Notation) é um formato de dados baseado em 
chave/valor, leve e fácil de ler.

Exemplo:
{
  "id": 1,
  "nome": "Galdino",
  "empresas": [
    { "nome_fantasia": "Youtube" },
    { "nome_fantasia": "AWS" }
  ]
}

5. VERBOS HTTP (MÉTODOS)
------------------------------------------------------------
GET     - Obter dados
POST    - Criar dados
PUT     - Atualizar dados (completo)
PATCH   - Atualizar parcialmente dados
DELETE  - Remover dados

6. EXEMPLOS DE USO
------------------------------------------------------------

GET - Lista todos os usuários
CLIENTE --> GET /api/usuarios --> SERVIDOR
Resposta: Lista de usuários + código 200 OK
------------------------------------------------------------
POST - Cria um novo usuário
CLIENTE --> POST /api/usuarios --> SERVIDOR
Corpo da requisição:
{
  "nome": "Felipe Brito"
}
Resposta: Código 200 ou 201
------------------------------------------------------------
PUT - Atualiza um usuário existente (substitui todos os dados)
CLIENTE --> PUT /api/usuarios/7 --> SERVIDOR
Corpo:
{
  "nome": "Felipe Brito Dev"
}
------------------------------------------------------------
PATCH - Atualiza parcialmente um usuário (apenas campos específicos)
CLIENTE --> PATCH /api/usuarios/7 --> SERVIDOR
Corpo:
{
  "nome": "Felipe Atualizado"
}
------------------------------------------------------------
GET (ID) - Retorna um usuário específico
GET /api/usuarios/7
Resposta:
{
  "id": 7,
  "nome": "Felipe Brito Dev"
}
------------------------------------------------------------
DELETE - Remove um usuário
DELETE /api/usuarios/7
------------------------------------------------------------

7. CÓDIGOS DE STATUS HTTP MAIS COMUNS: O servidores emitem códigos de resposta, indicando que a solicitação está  sendo processada, houve um erro na solicitação ou ocorreu com sucesso. Códigos de respostas:
- Respostas de informação (100-199)
- Respostas de sucesso (200-299)
- Redirecionamentos (300-399)
- Erros do cliente (400-499)
- Erros do servidor (500-599)
------------------------------------------------------------
EXEMPLOS:
200 OK             - Sucesso na requisição
201 Created        - Recurso criado com sucesso
204 No Content     - Requisição sem conteúdo de retorno
400 Bad Request    - Requisição malformada
404 Not Found      - Recurso não encontrado
500 Internal Error - Erro interno do servidor

8. TABELA DE RESUMO DOS ENDPOINTS
------------------------------------------------------------

+--------+---------------------+--------------------------------------+
| Método | Endpoint            | Descrição                            |
+--------+---------------------+--------------------------------------+
| GET    | /api/usuarios       | Lista todos os usuários              |
| POST   | /api/usuarios       | Cria um novo usuário                 |
| GET    | /api/usuarios/1     | Retorna usuário com ID = 1           |
| PUT    | /api/usuarios/1     | Atualiza usuário com ID = 1          |
| PATCH  | /api/usuarios/1     | Atualiza parcialmente o usuário      |
| DELETE | /api/usuarios/1     | Remove usuário com ID = 1            |
+--------+---------------------+--------------------------------------+

======================================================================
